/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.61
 * Generated at: 2021-01-21 17:48:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardWrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/board/boardWrite.css\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <h1>자유게시판</h1>\r\n");
      out.write("\r\n");
      out.write("    <div id=\"write-wrapper\">\r\n");
      out.write("        <h2>글작성</h2>\r\n");
      out.write("\r\n");
      out.write("        <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/write.do\" method=\"post\" \r\n");
      out.write("\t\t\t\t  \t\tenctype=\"multipart/form-data\" role=\"form\" onsubmit=\"return boardValidate();\">\r\n");
      out.write("            <div id=\"title-wrapper\">\r\n");
      out.write("                <label>글 제목</label> \r\n");
      out.write("                <input id=\"b-title\" name=\"b-title\" type=\"text\"> <br>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("            <div id=\"category-wrapper\">\r\n");
      out.write("                <label>카테고리</label>\r\n");
      out.write("                <input type=\"radio\" name=\"b-category\" id=\"info\" value=\"10\"> <label class=\"radio-check\">정보</label>\r\n");
      out.write("                <input type=\"radio\" name=\"b-category\" id=\"life\" value=\"20\"> <label class=\"radio-check\">일상</label>\r\n");
      out.write("                <input type=\"radio\" name=\"b-category\" id=\"hobby\" value=\"30\"> <label class=\"radio-check\">취미</label>\r\n");
      out.write("                <input type=\"radio\" name=\"b-category\" id=\"worry\" value=\"40\"> <label class=\"radio-check\">고민</label>\r\n");
      out.write("                <input type=\"radio\" name=\"b-category\" id=\"employ\" value=\"50\"> <label class=\"radio-check\">취업</label>\r\n");
      out.write("                <input type=\"radio\" name=\"b-category\" id=\"free\" value=\"60\"> <label class=\"radio-check\">자유</label> <br>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("<!--             <div id=\"file-wrapper\">\r\n");
      out.write("                <label for=\"File\">첨부하기&nbsp;&nbsp;</label> \r\n");
      out.write("                <input type=\"file\" name=\"file\" id=\"file-btn\"/>\r\n");
      out.write("                <i class=\"fas fa-file-image\"></i>\r\n");
      out.write("            </div> -->\r\n");
      out.write("\r\n");
      out.write("            <div id=\"content-wrapper\">\r\n");
      out.write("                <label>내용</label> <br>    \r\n");
      out.write("                <textarea id=\"b-content\" name=\"b-content\" class=\"summernote\"></textarea>\r\n");
      out.write("                \r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <button type=\"submit\" id=\"add-btn\" onClick=\"uploadSummernoteImageFile();\">등 록</button>\r\n");
      out.write("            <button type=\"button\" id=\"back-board-main\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${header.referer}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\">목록으로</button>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("\t    (function printToday(){\r\n");
      out.write("\t\t\t\t// 오늘 날짜 출력 \r\n");
      out.write("\t\t \t\tvar today = new Date();\r\n");
      out.write("\t\t\t\tvar month = (today.getMonth()+1);\r\n");
      out.write("\t\t\t\tvar date = today.getDate();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t  \tvar str = today.getFullYear() + \"-\"\r\n");
      out.write("\t\t        \t\t+ (month < 10 ? \"0\"+month : month) + \"-\"\r\n");
      out.write("\t\t        \t\t+ (date < 10 ? \"0\"+date : date);\r\n");
      out.write("\t\t\t\t$(\"#today\").html(str);\r\n");
      out.write("\t\t\t})();\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 유효성 검사 \r\n");
      out.write("\t\t\tfunction boardValidate() {\r\n");
      out.write("\t\t\t\tif ($(\"#boardTitle\").val().trim().length == 0) {\r\n");
      out.write("\t\t\t\t\talert(\"제목을 입력해 주세요.\");\r\n");
      out.write("\t\t\t\t\t$(\"#boardTitle\").focus();\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif ($(\"#boardContent\").val().trim().length == 0) {\r\n");
      out.write("\t\t\t\t\talert(\"내용을 입력해 주세요.\");\r\n");
      out.write("\t\t\t\t\t$(\"#boardContent\").focus();\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 이미지 업로드\r\n");
      out.write(" \t\t\t$(document).ready(function() {\r\n");
      out.write("\t\t\t\t//여기 아래 부분\r\n");
      out.write("\t\t\t\t$('#b-content').summernote({\r\n");
      out.write("\t\t\t\t\t  height: 300,                 // 에디터 높이\r\n");
      out.write("\t\t\t\t\t  minHeight: null,             // 최소 높이\r\n");
      out.write("\t\t\t\t\t  maxHeight: null,             // 최대 높이\r\n");
      out.write("\t\t\t\t\t  focus: true,                  // 에디터 로딩후 포커스를 맞출지 여부\r\n");
      out.write("\t\t\t\t\t  lang: \"ko-KR\",\t\t\t\t\t// 한글 설정\r\n");
      out.write("\t\t\t\t\t  placeholder: '최대 2048자까지 쓸 수 있습니다',\t//placeholder 설정\r\n");
      out.write("\t\t\t          \r\n");
      out.write("\t\t\t\t\t  callbacks: {\r\n");
      out.write("\t\t\t\t\t\t  onImageUploat: function(files, eidtor, welEditable) {\r\n");
      out.write("\t\t\t\t\t\t\t  for(var i = files.length - 1; i >= 0; i--) {\r\n");
      out.write("\t\t\t\t\t\t\t\t  uploadSummernoteImageFile(files[i], this);\r\n");
      out.write("\t\t\t\t\t\t\t  }\r\n");
      out.write("\t\t\t\t\t\t  }\r\n");
      out.write("\t\t\t\t\t  }\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}); \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/**\r\n");
      out.write("\t\t\t   * 이미지 파일 업로드\r\n");
      out.write("\t\t\t   */\r\n");
      out.write(" \t\t  function uploadSummernoteImageFile(file, el) {\r\n");
      out.write("\t      data = new FormData();\r\n");
      out.write("\t      data.append(\"file\", file);\r\n");
      out.write("\t      $.ajax({\r\n");
      out.write("\t         data : data,\r\n");
      out.write("\t         type : \"POST\",\r\n");
      out.write("\t         url : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/write.do\",\r\n");
      out.write("\t         contentType : false,\r\n");
      out.write("\t         processData : false,\r\n");
      out.write("\t         success : function(data) {\r\n");
      out.write("\t               //항상 업로드된 파일의 url이 있어야 한다.\r\n");
      out.write("             $(editor).summernote('insertImage', url); \r\n");
      out.write("\t\t\t\t\t//\t\t$(el).summernote('editor.insertImage', img_name);\r\n");
      out.write("\t         }\r\n");
      out.write("\t      });\r\n");
      out.write("   \t\t}   \r\n");
      out.write("\t\t\t   \r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
