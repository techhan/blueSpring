/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.61
 * Generated at: 2021-01-24 18:06:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class pwFind_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>푸른봄: 비밀번호 찾기</title>\r\n");
      out.write("\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/common/find.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;400;500;700;900&display=swap\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<script src=\"https://unpkg.com/sweetalert/dist/sweetalert.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write(".container{\r\n");
      out.write("\tpadding : 93px 0 310px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#findCNum{\r\n");
      out.write("\tmargin-top : 9px;\r\n");
      out.write("\tmargin-left : 103px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("#findEmail_btn{\r\n");
      out.write("\tmargin-left : 10px;\r\n");
      out.write("\twidth : 96px;\r\n");
      out.write("\theight : 42px;\r\n");
      out.write("\tbackground-color : rgb(241, 135, 35);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".back {\r\n");
      out.write("background-color: #fbf9f9;\r\n");
      out.write("padding : 40px 50px 50px 50px;\r\n");
      out.write("margin : auto;\r\n");
      out.write("width : 600px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".text_area{\r\n");
      out.write("\tmargin : auto;\r\n");
      out.write("\twidth : 700px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"wrap\">\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<div class=\"content\">\r\n");
      out.write("\t\t\t\t<form method=\"post\" name=\"pwFind\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/changePw.do\" onsubmit=\"return pwdValidate();\">\r\n");
      out.write("\t\t\t\t\t<div class=\"findForm\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"text_area\">\r\n");
      out.write("\t\t\t\t\t\t\t<h1>푸른봄</h1>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"back\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h3 style=\"margin-bottom: 0px;\">비밀번호 찾기</h3>\r\n");
      out.write("\t\t\t\t\t\t\t\t<h3 style=\"margin-top: 5px;\">본인확인 이메일 작성</h3>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"input_area\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"row_group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"text\">아이디</div> \r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"id\" name=\"id\" class=\"find_input\" required>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"row_group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"text\">이메일 주소</div> \r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"email\" id=\"email\" name=\"email\" class=\"find_input\" required>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn\" id=\"findEmail_btn\">인증번호 받기</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"findCNum\" class=\"find_input\" id=\"findCNum\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplaceholder=\"인증번호를 입력해주세요.\" autocomplete=\"off\" required>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"row_group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"nextBtn_area\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn\" id=\"nextBtn\">다음</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\r\n");
      out.write("\tvar sendKey; \r\n");
      out.write("\tvar eCheck = true;\r\n");
      out.write("\tvar numCheck = null;\r\n");
      out.write("\tvar mN = null;\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#email, #id\").on(\"input\", function(){\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : \"idEmaliChk.do\",\r\n");
      out.write("\t\t\tdata : {email : $(\"#email\").val(),\r\n");
      out.write("\t\t\t\t\tid : $(\"#id\").val()},\r\n");
      out.write("\t\t\ttype : \"post\",\r\n");
      out.write("\t\t\tasync : false,\r\n");
      out.write("\t\t\tsuccess : function(result){\r\n");
      out.write("\t\t\t\tmN = result+\"\";\r\n");
      out.write("\t\t\t\tconsole.log(mN)\r\n");
      out.write("\t\t\t\teCheck = true;\r\n");
      out.write("\t\t\t}, error : function(){\r\n");
      out.write("\t\t\t\teCheck = false;\r\n");
      out.write("\t\t\t\tconsole.log(\"error\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t/* function validate(){\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : \"idEmaliChk.do\",\r\n");
      out.write("\t\t\t\tdata : {email : $(\"#email\").val(),\r\n");
      out.write("\t\t\t\t\t\tid : $(\"#id\").val()},\r\n");
      out.write("\t\t\t\ttype : \"post\",\r\n");
      out.write("\t\t\t\tasync : false,\r\n");
      out.write("\t\t\t\tsuccess : function(result){\r\n");
      out.write("\t\t\t\t\tmNO = result+\"\";\r\n");
      out.write("\t\t\t\t\teCheck = true;\r\n");
      out.write("\t\t\t\t}, error : function(){\r\n");
      out.write("\t\t\t\t\teCheck = false;\r\n");
      out.write("\t\t\t\t\tconsole.log(\"error\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t} */\r\n");
      out.write("\t\r\n");
      out.write("$(\"#findEmail_btn\").on(\"click\", function(){\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl : \"../sendMail\",\r\n");
      out.write("\t\tdata : {toEmail : $(\"#email\").val()},\r\n");
      out.write("\t\ttype : \"post\",\r\n");
      out.write("\t\tasync : false,\r\n");
      out.write("\t\tsuccess : function(result){\r\n");
      out.write("\t\t\tif(eCheck && result != undefined){\r\n");
      out.write("\t\t\t\tswal({icon : \"success\", title : \"이메일이 전송되었습니다.\", text : $(\"#email\").val() + \" 에서 확인해주세요.\"});\r\n");
      out.write("\t\t\t\tsendKey = result;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tswal({icon : \"error\", title : \"이메일 전송 실패\", text : \"이메일을 다시 확인해주세요.\"});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t, error : function(){\r\n");
      out.write("\t\t\tswal({icon : \"error\", title : \"이메일 전송 실패\", text : \"이메일을 다시 확인해주세요.\"});\r\n");
      out.write("\t\t\tconsole.log(\"error\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\tvar check = true;\r\n");
      out.write("\t$(\"#findCNum\").on(\"input\",function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar inputKey = $(\"#findCNum\").val();\r\n");
      out.write("\t\tif(sendKey == inputKey){\r\n");
      out.write("\t\t\tcheck = true;\r\n");
      out.write("\t\t\tnumCheck = true;\r\n");
      out.write("\t\t\t$(\"#findCNum\").css(\"border\", \"1px solid #8cb0f7\");\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tcheck = false;\r\n");
      out.write("\t\t\tnumCheck = false;\r\n");
      out.write("\t\t\t$(\"#findCNum\").css(\"border\", \"1px solid red\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t// 비밀번호 변경 js\r\n");
      out.write("\tfunction pwdValidate(){\r\n");
      out.write("\r\n");
      out.write("\t    var regExp = /^[a-zA-Z\\d]{6,12}$/; // 영어 대,소문자 + 숫자, 총 6~12글자\r\n");
      out.write("\r\n");
      out.write("\t    if(!regExp.test( $(\"#newPw1\").val() ) ){\r\n");
      out.write("\t        swal(\"비밀번호 형식이 유효하지 않습니다.\");\r\n");
      out.write("\t        $(\"#newPw1\").focus();\r\n");
      out.write("\r\n");
      out.write("\t        return false; \r\n");
      out.write("\t    }\r\n");
      out.write("\r\n");
      out.write("\t    // 새로운 비밀번호와 확인이 일치하지 않을 때\r\n");
      out.write("\t    if( $(\"#newPw1\").val() != $(\"#newPw2\").val() ){\r\n");
      out.write("\t        swal(\"새로운 비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("\t        \r\n");
      out.write("\t        $(\"#newPw1\").focus(); // 포커스 이동\r\n");
      out.write("\t        $(\"#newPw1\").val(\"\"); // newPwd1에 값 지우기 \r\n");
      out.write("\t        $(\"#newPw2\").val(\"\"); // newPwd2에 값 지우기 \r\n");
      out.write("\r\n");
      out.write("\t        return false;\r\n");
      out.write("\t    }\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#nextBtn\").on(\"click\", function(){\r\n");
      out.write("\t\tlocation.href = \"changePw.do?ck=\"+numCheck + \"&mN=\" + mN ;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}); \r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
